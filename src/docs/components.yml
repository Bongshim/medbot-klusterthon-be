components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        phoneNumber:
          type: string
        profileImage:
          type: string
        password:
          type: string
        roleId:
          type: integer
        userType:
          type: string
        bodyHeight:
          type: number
        bodyWeight:
          type: number
        dateOfBirth:
          type: date
      example:
        id: 1
        email: user@example.com
        firstName: John
        lastName: Doe
        username: johndoe
        phoneNumber: 08012345678
        profileImage: http://image.jpg
        password: password
        roleId: 1
        userType: admin
        bodyHeight: 1.8
        bodyWeight: 70
        dateOfBirth: 1990-01-01

    CreateUser:
      type: object
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
      example:
        email: user@example.com
        firstName: John
        lastName: Doe
        password: password1

    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    Variable:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      example:
        id: 2343953
        name: username

    MessageTemplate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        emailSubject:
          type: string
        emailBody:
          type: string
        smsSubject:
          type: string
        smsBody:
          type: string
      example:
        title: Welcome Email
        description: Welcome email to new users
        emailSubject: Welcome to the platform
        emailBody: Hello {{username}}, welcome to the platform
        smsSubject: Welcome to the platform
        smsBody: Hello {{username}}, welcome to the platform

    Role:
      type: object
      properties:
        title:
          type: string
          required: true
        description:
          type: string
          required: true
        permissions:
          type: array
          items:
            type: integer
            required: true
      example:
        title: Admin
        description: All admin
        permissions: [1, 2, 3]

    Permission:
      type: object
      properties:
        name:
          type: string
          required: true
        value:
          type: string
          required: true
        groupName:
          type: string
          required: true
        description:
          type: string
          required: true
      example:
        name: Manage Users
        value: users.manage
        groupName: Users Permission
        description: Permission to create, delete and modify users

    Upload:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object
          properties:
            url:
              type: string
      example:
        success: true
        message: File uploaded successfully
        data:
          url: http://image.jpg

    Pagination:
      type: object
      properties:
        limit:
          type: number
        page:
          type: number
        totalResults:
          type: number
        totalPages:
          type: number
      example:
        limit: 10
        page: 1
        totalResults: 100
        totalPages: 10

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

    HealthBackground:
      type: object
      properties:
        id:
          type: integer
        hasHighBloodPressure:
          type: boolean
        hasDiabetes:
          type: boolean
        isSmoker:
          type: boolean
      example:
        id: 1
        hasHighBloodPressure: true
        hasDiabetes: false
        isSmoker: true

    Recommendation:
      type: object
      properties:
        symptom:
          type: string
        questions:
          type: array
          items:
            type: object
            properties:
              question:
                type: string
              answer:
                type: string
      example:
        symptom: High Blood Pressure
        questions:
          - question: Do you have a family history of high blood pressure?
            answer: Yes
          - question: Do you have a family history of high blood pressure?
            answer: Yes

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    Recommendation:
      type: object
      properties:
        symptom:
          type: string
        diagnosis_summary:
          type: string
        possible_causes:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              recommendation:
                type: string
              description:
                type: string
      example:
        symptom: High Blood Pressure
        diagnosis_summary: You have high blood pressure
        possible_causes:
          - title: Family History
            recommendation: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam euismod, nisl eget
              ultricies aliquam, quam sapien aliquet nunc, nec ultricies nisl nunc eu nisl. Nulla facilisi.
            description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam euismod, nisl eget
              ultricies aliquam, quam sapien aliquet nunc, nec ultricies nisl nunc eu nisl. Nulla facilisi.
          - title: Family History
            recommendation: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam euismod, nisl eget
              ultricies aliquam, quam sapien aliquet nunc, nec ultricies nisl nunc eu nisl. Nulla facilisi.
            description: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam euismod, nisl eget
              ultricies aliquam, quam sapien aliquet nunc, nec ultricies nisl nunc eu nisl. Nulla facilisi.

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
